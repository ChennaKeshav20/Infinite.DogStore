@using Infinite.DogStore.Models
@model Pet
@{
    ViewBag.Title = "Create";
}
<h2>Add New Pet</h2>
<hr />
@using (Html.BeginForm())

{
    <div class="mb-2">
        @Html.LabelFor(p => p.PetName, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.PetName, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.PetName)
    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.Description, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Description)
    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.DogBreedId, new { @class = "form-label" })
        @Html.DropDownListFor(p => p.DogBreedId, new SelectList(ViewBag.DogBreed, "Id", "Breed"), "--Select--", new { @class = "form-select" })
        @Html.ValidationMessageFor(p => p.DogBreedId)
    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.Height, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.Height, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Height)
    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.Weight, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.Weight, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Weight)
    </div>
    <div class="mb-2">
        @Html.LabelFor(p => p.Age, new { @class = "form-label" })
        @Html.TextBoxFor(p => p.Age, new { @class = "form-control" })
        @Html.ValidationMessageFor(p => p.Age)
    </div>
    <div class="mt-2">
        <input type="submit" id="btnadd" class="btn btn-primary" value="add" />
    </div>
}